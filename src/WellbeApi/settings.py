"""
Django settings for WellbeApi project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from datetime import timedelta

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get("DEBUG")
if not DEBUG:
    SILKY_INTERCEPT_PERCENT = 10

ALLOWED_HOSTS = ['web', '*']

# Application definition

INSTALLED_APPS = [
    'django_extensions',
    'django.contrib.admin',
    'django_quill',
    'import_export',
    'smuggler',
    'django_editorjs',
    'django_editorjs_fields',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'celery',
    'storages',
    'corsheaders',
    'rest_framework',
    'django_filters',
    'rest_framework_simplejwt.token_blacklist',
    'api.v1.users',
    'api.v1.files',
    'api.v1.variables',
    'api.v1.images',
    'silk',
    'oauth2_provider',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'silk.middleware.SilkyMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
]
SESSION_COOKIE_SAMESITE = None
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_ALLOW_ALL = True

SILKY_PYTHON_PROFILER = True
SILKY_PYTHON_PROFILER_BINARY = True
if DEBUG:
    SILKY_INTERCEPT_PERCENT = 100
else:
    SILKY_INTERCEPT_PERCENT = 5
SILKY_AUTHENTICATION = True  # User must login
SILKY_AUTHORISATION = True  # User must have permissions
SILKY_META = True
SILKY_ANALYZE_QUERIES = True
SILKY_MAX_RECORDED_REQUESTS = 10**4
SILKY_MAX_RECORDED_REQUESTS_CHECK_PERCENT = 10

INTERNAL_IPS = [
    # ...
    '127.0.0.1',
    '172.18.0.8'
    # ...
]

# CORS_ORIGIN_WHITELIST = (
#     'http://localhost:3000',
#     'http://app.wellbe.club'
# )
# CORS_ORIGIN_REGEX_WHITELIST = (
#     'http://localhost:3000',
#     'http://app.wellbe.club '
# )
ROOT_URLCONF = 'WellbeApi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['./templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages'
            ],
        },
    },
]

WSGI_APPLICATION = 'WellbeApi.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
CONN_MAX_AGE=60*5
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ.get("DB_NAME"),
        'USER': os.environ.get("DB_USER"),
        'PASSWORD': os.environ.get("DB_PASSWORD"),
        'HOST': os.environ.get("DB_HOST"),
        'PORT': os.environ.get("DB_PORT"),
    }
}

AUTHENTICATION_BACKENDS = (
    'oauth2_provider.backends.OAuth2Backend',
    'django.contrib.auth.backends.ModelBackend'
)



SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

OAUTH2_PROVIDER = {
    'SCOPES': {
        "read": 'Read scope',
        "write": 'Write scope',
        'groups': 'Access to your groups'
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ],
    'TEST_REQUEST_DEFAULT_FORMAT': 'json'
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/
DATA_UPLOAD_MAX_MEMORY_SIZE = 15242880

RABBIT_USER = os.environ.get("RABBIT_USER")
RABBIT_PASSWORD = os.environ.get("RABBIT_PASSWORD")
BROKER_POOL_LIMIT = 10
CELERYD_FORCE_EXECV = True
CELERY_TASK_RESULT_EXPIRES = 3600
CELERYD_POOL_RESTARTS = True
CELERY_ACKS_LATE = False
CELERYD_PREFETCH_MULTIPLIER = 1
CELERY_RESULT_BACKEND = "rpc://"
# CELERY_BROKER_URL = f'pyamqp://wellbe:090198sap@rabbit:5672'
CELERY_BROKER_URL = os.environ.get("CELERY_BROKER_URL")
# CELERY_RESULT_BACKEND = f'pyamqp://{os.environ.get("RABBITMQ_DEFAULT_USER")}:{os.environ.get("RABBITMQ_DEFAULT_PASS")}@rabbit:5672'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
        'celery': {
            'handlers': ['console'],
            'level': os.getenv('DJANGO_LOG_LEVEL', 'INFO'),
        },
    },
}

FIRST_PROMOCODE_REMIND_SECONDS = int(os.environ.get("FIRST_PROMOCODE_REMIND_SECONDS"))

DAILY_CO_TOKEN = os.environ.get("DAILY_CO_TOKEN")
TELEGRAM_BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
TELEGRAM_ORDERS_BOT_TOKEN = '1824994583:AAFchOfvF7UU8cONH3Aem5Utg9ZkqYfvZdA'
AUTH_USER_MODEL = 'users.User'
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get("SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET")
SOCIAL_SECRET = os.environ.get('SOCIAL_SECRET')
FRONTEND_URL = os.environ.get("FRONTEND_URL")
FRONTEND_BOX_URL = os.environ.get("FRONTEND_BOX_URL")
CLOUDPAYMENTS_PUBLIC_KEY = os.environ.get("CLOUDPAYMENTS_PUBLIC_KEY")  # Public ID
CLOUDPAYMENTS_SECRET_KEY = os.environ.get("CLOUDPAYMENTS_SECRET_KEY")  # пароль для API
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get("EMAIL_HOST")
EMAIL_PORT = os.environ.get("EMAIL_PORT")
EMAIL_HOST_USER = os.environ.get("EMAIL_HOST_USER")
EMAIL_HOST_PASSWORD = os.environ.get("GMAIL_PASSWORD")
SMS_RU_API_TOKEN = os.environ.get("SMS_RU_API_TOKEN")
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = 'default from email'

USE_S3 = os.getenv('USE_S3') == 'TRUE'

if USE_S3:
    # aws settings
    AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
    AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
    AWS_DEFAULT_ACL = None
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    # s3 static settings
    STATIC_LOCATION = 'static'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{STATIC_LOCATION}/'
    STATICFILES_STORAGE = 'WellbeApi.storage_backends.StaticStorage'
    # s3 public media settings
    PUBLIC_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'WellbeApi.storage_backends.PublicMediaStorage'
else:
    STATIC_URL = '/static/'
    STATIC_ROOT = './static/'
    MEDIA_URL = '/media/'
    MEDIA_ROOT = './media/'

# ---------------- Local Settings ---------------------------------------
# Put your local settings in WellbeApi directory to override this settings
# File name should be local_settings.py
try:
    from .local_settings import *
except ImportError:
    print('No Local Settings Found')


ACCESS_TOKEN_PHONE_LIFETIME = timedelta(hours=2)
REFRESH_TOKEN_PHONE_LIFETIME = timedelta(days=30)

# ---------------- End Local Settings ------------------------------------
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=2),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',
}

# My variables

EXPERT_PROFILE_DEFAULT_LIMIT = 3
DELIVERY_DEFAULT_COST = 299
COMBINED_BOX_DEFAULT_DURATION_MONTH = 2
TARIFFS = {
            1: 2500,
            2: 2312.5,
            3: 2300,
            6: 2200,
            12: 2100
}
# Sendpulse
SENDPULSE_REST_API_ID = 'e66bded90ed6689b528ec155049cc799'
SENDPULSE_REST_API_SECRET = '32418d907db637031bd651e9f1343887'
SENDPULSE_TOKEN_STORAGE = 'memcached'
#SENDPULSE EMAIL TEMPLATES ID
SENDPULSE_RECOMMENDATION_EMAIL_ID = 120806
SENDPULSE_RECOMMENDATION_PROMOCODE_EMAIL_ID = 119207
SENDPULSE_RECOMMENDATION_PROMOCODE_REMIND_EMAIL_ID = 119209
#SENDPULSE ADRESS BOOKS ID
SENDPULSE_ADDRESS_BOOK_AFTER_RECOMMENDATION_ID = 427951
SENDPULSE_ADDRESS_BOOK_AFTER_BOX_RECOMMENDATION_ID = 483461
SENDPULSE_ADDRESS_BOOK_AFTER_COMPLETE_ORDER_ID = 427954
